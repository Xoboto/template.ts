name: CI/CD Pipeline

permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Build examples
      run: npm run build:examples
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, coverage, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: production
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish --provenance --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Build examples
      run: npm run build:examples
    
    - name: Check if Pages is enabled
      id: pages-check
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.repos.getPages({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return true;
          } catch (error) {
            if (error.status === 404) {
              console.log('Pages not enabled, skipping deployment');
              return false;
            }
            throw error;
          }
    
    - name: Setup Pages
      if: steps.pages-check.outputs.result == 'true'
      uses: actions/configure-pages@v5
    
    - name: Upload artifact
      if: steps.pages-check.outputs.result == 'true'
      uses: actions/upload-pages-artifact@v3
      with:
        path: './examples'
    
    - name: Deploy to GitHub Pages
      if: steps.pages-check.outputs.result == 'true'
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Pages not enabled
      if: steps.pages-check.outputs.result != 'true'
      run: |
        echo "⚠️ GitHub Pages is not enabled for this repository."
        echo "To enable it, go to Settings → Pages → Source → GitHub Actions"

  auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    
    steps:
    - name: Dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v1.6.0
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
    
    - name: Auto-merge Dependabot PRs
      if: ${{steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
      run: gh pr merge --auto --merge "$PR_URL"
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}